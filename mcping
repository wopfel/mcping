#!/usr/bin/perl

use strict;
use warnings;

use Curses;
use Time::HiRes qw( usleep );
use Net::Ping;

# Which hosts should be pinged?
my @hostlist = qw / 127.0.0.1 127.0.0.2 127.0.0.3 8.8.8.8 127.0.0.4 172.16.0.1 /;

# Initialize the screen
initscr;
my $win = new Curses;

# Initialize ping environment (method, timeout)
my $ping = Net::Ping->new( "icmp", 0.4 );
$ping->hires();

# Screen settings
my $first_line_y = 5;
# For iterating the host list
my $host_nr;
# The history for each host
my @host_history;
$host_history[$_] = "" for (0 .. scalar @hostlist);

$win->addstr( 2, 0, "Hit Ctrl+C to exit anytime." );

# Print host names / IP addresses
$host_nr = 0;
foreach my $host ( @hostlist ) {
    $win->addstr( $first_line_y + $host_nr, 0, $host );
    $host_nr++;
}
$win->refresh;

# Endless loop
while (1) {

    # Strip history for each host
    # No screen update here / defer update after next ping check
    $host_nr = 0;
    foreach my $host ( @hostlist ) {
        $host_history[ $host_nr ] = substr $host_history[ $host_nr ], -20;
        $win->addstr( $first_line_y + $host_nr, 30, $host_history[ $host_nr ] );
        $host_nr++;
    }

    # Ping each host
    $host_nr = 0;
    foreach my $host ( @hostlist ) {

        # Ping this host
        my ( $ret, $dur, $ip ) = $ping->ping( $host );

        # Demo purpose
        #$ret = rand() > 0.1;
    
        # History diagram
        $host_history[ $host_nr ] .= $ret ? "." : "-";

        # Screen updates
        my $dur_s = "";
        if ( $ret ) {
            # The duration, printed in milliseconds
            $dur_s = sprintf( "%9.4f", $dur * 1000 );
        } else {
            # Wipe the (previously shown) timeout-duration if ping was unsuccessful
            $dur_s = " " x 9;
        }
        $win->addstr( $first_line_y + $host_nr, 15, $dur_s );
        $win->addstr( $first_line_y + $host_nr, 30, $host_history[ $host_nr ] );

        # Show screen updates
        $win->refresh;

        # Short sleep before the next try
        usleep( 100_000 );

        $host_nr++;

    }

}

# Terminate curses
endwin;

